<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bailiyingqi</title>
    <link>https://zhangsiming-bailiyingqi.github.io/</link>
    <description>Recent content on bailiyingqi</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 26 Aug 2025 02:00:00 +0800</lastBuildDate>
    <atom:link href="https://zhangsiming-bailiyingqi.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Building a Simple Layered API in Go (Gin &#43; GORM)</title>
      <link>https://zhangsiming-bailiyingqi.github.io/posts/go/layered-api/</link>
      <pubDate>Tue, 26 Aug 2025 02:00:00 +0800</pubDate>
      <guid>https://zhangsiming-bailiyingqi.github.io/posts/go/layered-api/</guid>
      <description>&lt;p&gt;This guide demonstrates how to build a simple REST API in Go using a &lt;strong&gt;layered architecture&lt;/strong&gt; consisting of &lt;strong&gt;Model&lt;/strong&gt;, &lt;strong&gt;Service&lt;/strong&gt;, &lt;strong&gt;Handler&lt;/strong&gt;, and &lt;strong&gt;Router&lt;/strong&gt; layers. We‚Äôll walk through an example: fetching news details by ID.&lt;/p&gt;&#xA;&lt;p&gt;By following this structure, your application becomes easier to &lt;strong&gt;maintain, extend, and test&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-architecture-overview&#34;&gt;1. Architecture Overview&lt;/h2&gt;&#xA;&lt;p&gt;A typical request flows through the system like this:&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;The &lt;strong&gt;client&lt;/strong&gt; sends an HTTP request.&lt;/li&gt;&#xA;&lt;li&gt;The &lt;strong&gt;Router&lt;/strong&gt; (Gin) matches the request to a handler function.&lt;/li&gt;&#xA;&lt;li&gt;The &lt;strong&gt;Handler&lt;/strong&gt; validates input and calls the Service layer.&lt;/li&gt;&#xA;&lt;li&gt;The &lt;strong&gt;Service&lt;/strong&gt; executes business logic and fetches data from the Model.&lt;/li&gt;&#xA;&lt;li&gt;The &lt;strong&gt;Model&lt;/strong&gt; interacts with the database (via GORM).&lt;/li&gt;&#xA;&lt;li&gt;Results are propagated back through the layers, and a JSON response is returned.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;2-model-layer-database-models&#34;&gt;2. Model Layer (Database Models)&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;strong&gt;Model layer&lt;/strong&gt; defines the schema and interacts with the database.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes Operator: A Beginner-Friendly Guide</title>
      <link>https://zhangsiming-bailiyingqi.github.io/posts/kubernetes/operator/</link>
      <pubDate>Tue, 26 Aug 2025 01:00:00 +0800</pubDate>
      <guid>https://zhangsiming-bailiyingqi.github.io/posts/kubernetes/operator/</guid>
      <description>&lt;h2 id=&#34;1-introduction&#34;&gt;1. Introduction&lt;/h2&gt;&#xA;&lt;p&gt;A &lt;strong&gt;Kubernetes Operator&lt;/strong&gt; is an advanced controller that automates the management of complex applications. Instead of relying on humans to perform tasks such as deployment, scaling, and backup, an Operator encodes operational knowledge directly into Kubernetes.&lt;/p&gt;&#xA;&lt;p&gt;This guide provides a step-by-step walkthrough for building a simple &lt;strong&gt;MySQL Operator&lt;/strong&gt; with &lt;a href=&#34;https://github.com/kubernetes-sigs/kubebuilder&#34;&gt;Kubebuilder&lt;/a&gt;. It is written for beginners and includes full code samples and explanations.&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-why-operators&#34;&gt;2. Why Operators?&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Automation&lt;/strong&gt;: Routine tasks (create, scale, backup) are automated.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Consistency&lt;/strong&gt;: Applications always converge to the desired state.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Declarative management&lt;/strong&gt;: Users describe intent in a Custom Resource (CR), and the Operator ensures the system matches.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;3-core-concepts&#34;&gt;3. Core Concepts&lt;/h2&gt;&#xA;&lt;h3 id=&#34;31-custom-resource-cr-and-custom-resource-definition-crd&#34;&gt;3.1 Custom Resource (CR) and Custom Resource Definition (CRD)&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;CRD&lt;/strong&gt;: Extends the Kubernetes API by defining a new resource type (e.g., &lt;code&gt;MySQL&lt;/code&gt;).&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;CR&lt;/strong&gt;: An instance of the CRD that represents desired state (e.g., a MySQL instance with 2 replicas).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;32-controller&#34;&gt;3.2 Controller&lt;/h3&gt;&#xA;&lt;p&gt;A controller runs a &lt;strong&gt;reconciliation loop&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Understanding Closures in Go</title>
      <link>https://zhangsiming-bailiyingqi.github.io/posts/go/go-closures/</link>
      <pubDate>Tue, 26 Aug 2025 00:00:00 +0800</pubDate>
      <guid>https://zhangsiming-bailiyingqi.github.io/posts/go/go-closures/</guid>
      <description>&lt;p&gt;Closures are a fundamental concept in many programming languages, including Go and Python. This article provides a clear explanation of what closures are, how they work in Go, and some common pitfalls developers should be aware of.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-what-is-a-closure&#34;&gt;1. What Is a Closure?&lt;/h2&gt;&#xA;&lt;p&gt;A closure is a function bundled together with its surrounding environment. It consists of two elements:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Function&lt;/strong&gt; ‚Äì the inner function returned by an outer function. This can be a named function, an anonymous function, or a lambda expression.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Environment&lt;/strong&gt; ‚Äì the variables captured from the outer scope that remain accessible even after the outer function has returned.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;In practice, closures allow functions to retain access to variables that were in scope when the function was defined‚Äîeven if those variables are no longer available in the current call stack.&lt;/p&gt;</description>
    </item>
    <item>
      <title>tag algorithm</title>
      <link>https://zhangsiming-bailiyingqi.github.io/posts/tags/tags-example3/</link>
      <pubDate>Mon, 25 Aug 2025 18:00:00 +0800</pubDate>
      <guid>https://zhangsiming-bailiyingqi.github.io/posts/tags/tags-example3/</guid>
      <description></description>
    </item>
    <item>
      <title>tag English</title>
      <link>https://zhangsiming-bailiyingqi.github.io/posts/tags/tags-example4/</link>
      <pubDate>Mon, 25 Aug 2025 18:00:00 +0800</pubDate>
      <guid>https://zhangsiming-bailiyingqi.github.io/posts/tags/tags-example4/</guid>
      <description></description>
    </item>
    <item>
      <title>tag golang</title>
      <link>https://zhangsiming-bailiyingqi.github.io/posts/tags/tags-example/</link>
      <pubDate>Mon, 25 Aug 2025 18:00:00 +0800</pubDate>
      <guid>https://zhangsiming-bailiyingqi.github.io/posts/tags/tags-example/</guid>
      <description></description>
    </item>
    <item>
      <title>tag interview</title>
      <link>https://zhangsiming-bailiyingqi.github.io/posts/tags/tags-example5/</link>
      <pubDate>Mon, 25 Aug 2025 18:00:00 +0800</pubDate>
      <guid>https://zhangsiming-bailiyingqi.github.io/posts/tags/tags-example5/</guid>
      <description></description>
    </item>
    <item>
      <title>tag kubernetes</title>
      <link>https://zhangsiming-bailiyingqi.github.io/posts/tags/tags-example2/</link>
      <pubDate>Mon, 25 Aug 2025 18:00:00 +0800</pubDate>
      <guid>https://zhangsiming-bailiyingqi.github.io/posts/tags/tags-example2/</guid>
      <description></description>
    </item>
    <item>
      <title>tag vue</title>
      <link>https://zhangsiming-bailiyingqi.github.io/posts/tags/tags-example1/</link>
      <pubDate>Mon, 25 Aug 2025 18:00:00 +0800</pubDate>
      <guid>https://zhangsiming-bailiyingqi.github.io/posts/tags/tags-example1/</guid>
      <description></description>
    </item>
    <item>
      <title>About</title>
      <link>https://zhangsiming-bailiyingqi.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://zhangsiming-bailiyingqi.github.io/about/</guid>
      <description>&lt;p&gt;ü¶ä HannaÔΩúüê± MooncakeÔΩúüéÆ PSÔΩúüåç TravelÔΩúüèãÔ∏è‚Äç‚ôÇÔ∏è FitnessÔΩúüíª Coding ¬∑ Cloud-NativeÔΩúüìΩÔ∏è Movies &amp;amp; AnimeÔΩúüì∏ Photography&lt;/p&gt;&#xA;&lt;p&gt;Hi, I‚Äôm &lt;strong&gt;bailiyingqi&lt;/strong&gt;.&lt;br&gt;&#xA;This site is my personal space for writing, coding notes, and curated documents.&lt;br&gt;&#xA;Everything here is in &lt;strong&gt;English only&lt;/strong&gt; ‚Äî no Chinese content ‚Äî and updated at my own pace.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-to-expect&#34;&gt;What to Expect&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Engineering notes&lt;/strong&gt;: Kubernetes, Go, Python, Shell, Linux.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Reference docs&lt;/strong&gt;: practical guides and snippets that I‚Äôve found useful.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Series updates&lt;/strong&gt;: longer-form documents, updated occasionally.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Personal logs&lt;/strong&gt;: brief updates on what I‚Äôm learning or building.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The focus is on clarity and practicality ‚Äî short, usable notes that I can come back to, and hopefully you can too.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Contact</title>
      <link>https://zhangsiming-bailiyingqi.github.io/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://zhangsiming-bailiyingqi.github.io/contact/</guid>
      <description>&lt;p&gt;Hi, I‚Äôm &lt;strong&gt;bailiyingqi&lt;/strong&gt;.&lt;br&gt;&#xA;If you‚Äôd like to reach out, collaborate, or just say hello ‚Äî here‚Äôs how:&lt;/p&gt;&#xA;&lt;h2 id=&#34;social&#34;&gt;Social&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;üìù &lt;strong&gt;Blog&lt;/strong&gt;: &lt;a href=&#34;https://zhangsiming-bailiyingqi.github.io/&#34;&gt;bailiyingqi.com&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;üêô &lt;strong&gt;GitHub&lt;/strong&gt;: &lt;a href=&#34;https://github.com/&#34;&gt;github.com/bailiyingqi&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;üê¶ &lt;strong&gt;Twitter/X&lt;/strong&gt;: &lt;a href=&#34;https://twitter.com/&#34;&gt;@bailiyingqi&lt;/a&gt;&lt;br&gt;&#xA;&amp;hellip;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Updates</title>
      <link>https://zhangsiming-bailiyingqi.github.io/updates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://zhangsiming-bailiyingqi.github.io/updates/</guid>
      <description>&lt;p&gt;A simple timeline of what I‚Äôve been focusing on in the last 1‚Äì2 months.&lt;br&gt;&#xA;Maintained by &lt;strong&gt;bailiyingqi&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Aug 25, 2025&lt;/strong&gt; ‚Äî A new beginning.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
